# models.py

from django.db import models
from django.contrib.auth.models import User

class Subscription(models.Model):
    subscriber = models.ForeignKey(User, related_name='subscriptions', on_delete=models.CASCADE)
    target_user = models.ForeignKey(User, related_name='subscribers', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        unique_together = ('subscriber', 'target_user')

class SubscriptionPlan(models.Model):
    name = models.CharField(max_length=100)
    price_per_month = models.DecimalField(max_digits=10, decimal_places=2)

class Invitation(models.Model):
    inviter = models.ForeignKey(User, related_name='invitations_sent', on_delete=models.CASCADE)
    invitee = models.ForeignKey(User, related_name='invitations_received', on_delete=models.CASCADE)
    post = models.ForeignKey('Post', related_name='invitations', on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)


# views.py

from django.shortcuts import render, redirect, get_object_or_404
from django.contrib.auth.decorators import login_required
from django.http import HttpResponseForbidden
from django.views.decorators.csrf import ensure_csrf_cookie
from django.views.decorators.clickjacking import xframe_options_sameorigin
from .forms import PostForm
from .models import Post, Subscription, SubscriptionPlan, Invitation

@ensure_csrf_cookie
@xframe_options_sameorigin
@login_required
def home(request):
    user = request.user

    # 招待されたユーザーが投稿した投稿のみを表示
    invited_posts = Post.objects.filter(invitations__invitee=user)

    # POSTリクエストでのアクションを処理
    if request.method == 'POST':
        # ユーザーが招待されているかどうかを確認
        if user in invited_posts:
            form = PostForm(request.user, request.POST, request.FILES)
            if form.is_valid():
                post = form.save(commit=False)
                post.author = request.user
                post.save()
                return redirect('home')
        else:
            return HttpResponseForbidden("この操作は許可されていません。")

    # フォームの作成
    form = PostForm(request.user)

    # サブスクリプションプランの取得
    subscription_plan = SubscriptionPlan.objects.get(name='1 Dollar Plan')  # 月額1ドルのプラン

    return render(request, 'home.html', {'posts': invited_posts, 'form': form, 'subscription_plan': subscription_plan})
